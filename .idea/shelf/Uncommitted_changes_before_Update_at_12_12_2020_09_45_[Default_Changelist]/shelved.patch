Index: app/src/main/java/sanchez/miguel/alfonso/simul/BaseActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sanchez.miguel.alfonso.simul;\r\n\r\nimport android.app.Activity;\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.CountDownTimer;\r\nimport android.text.Editable;\r\nimport android.text.TextUtils;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\nimport java.util.TimeZone;\r\n\r\nabstract class BaseActivity extends AppCompatActivity {\r\n\r\n    //Google singIn release key presa dall'api console\r\n    public static final String web_client_for_google_sign_in = \"436100610708-gfrks3cgfganfa8tgj3ic54us9kempjm.apps.googleusercontent.com\";\r\n\r\n    //Inizializzo questi valori nell'attività di login prima del controllo\r\n\r\n    public static SharedPreferences prefs;\r\n    public static SharedPreferences.Editor editor;\r\n    public static FirebaseAuth mAuth;\r\n    public static FirebaseUser User;\r\n\r\n    //Informazioni Utente\r\n    public static String current_user_id;\r\n    public static String data_attuale, ora_attuale, data_e_ora;\r\n    public static String data_creazione_account;\r\n    public static String link_immmagine_dentro_db;\r\n    public static String nickname;\r\n    public static String email;\r\n\r\n    //Variabili per il client in locale di google sing in\r\n    public GoogleSignInOptions gso;\r\n    public static GoogleSignInClient mGoogleSignInClient;\r\n    //Intent del sign in (come avviare un activity)\r\n    public int RC_SIGN_IN;\r\n    public Intent signInIntent;\r\n\r\n    //Oggetti pubblici\r\n    public static ProgressDialog public_progressdialog;\r\n    public static Dialog dialog;\r\n\r\n    //Database References : storage\r\n    public static StorageReference image_storage, immagine_utente;\r\n\r\n    //Database References : realtime database\r\n    public static DatabaseReference NicknameRef;\r\n    public static DatabaseReference UsersRef;\r\n    public static DatabaseReference CurrentUserRef;\r\n    public static DatabaseReference RoomsRef;\r\n\r\n    //Variabili necessarie per i metodi pubblici\r\n    private int registration_three_way_check;\r\n\r\n\r\n    //valori soglia accelerometro e velocità\r\n    public static final double SOGLIA_ACCELEROMETRO = 50.0;\r\n    public static final double SOGLIA_VELOCITA_KM_H = 35.0;\r\n    public static final int ALARM_COUNTDOWN_MAX_TIME = 10000;\r\n\r\n    private boolean dialog_is_already_opened = false;\r\n\r\n    CountDownTimer alarm_countdown;\r\n\r\n\r\n    boolean check_accelerometer_anomalies(double val){\r\n        return val >= SOGLIA_ACCELEROMETRO;\r\n    }\r\n\r\n    boolean check_velocity_anomalies(double val){\r\n        return val >= SOGLIA_VELOCITA_KM_H;\r\n    }\r\n\r\n\r\n    protected void prendi_user_id_attuale() {\r\n        mAuth = FirebaseAuth.getInstance();\r\n        User = mAuth.getCurrentUser();\r\n        current_user_id = Objects.requireNonNull(Objects.requireNonNull(User).getUid());\r\n    }\r\n\r\n    //controllo se ho un utente connesso attualmente\r\n    protected boolean check_connection() {\r\n        return (mAuth.getCurrentUser() != null);\r\n    }\r\n\r\n    //controllo se mi sono già loggato in precedenza\r\n    protected boolean check_login() {\r\n        return prefs.getBoolean(\"hasLogin\", false);\r\n    }\r\n\r\n    //controllo se mi sono già registrato in precedenza\r\n    protected boolean check_registration() {\r\n        return prefs.getBoolean(\"hasRegistration\", false);\r\n    }\r\n\r\n\r\n    protected void editext_listener(final Context context, final EditText nick_editext) {\r\n        nick_editext.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) { }\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (nick_check(context,nick_editext)) {\r\n                    check_nick_existance(context,nick_editext);\r\n                }\r\n            }\r\n            @Override\r\n            public void afterTextChanged(Editable s) { }\r\n        });\r\n    }\r\n\r\n    protected void initilize_google_variables(){\r\n        gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(web_client_for_google_sign_in)\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(getApplicationContext(), gso);\r\n        RC_SIGN_IN = 1;\r\n        signInIntent = mGoogleSignInClient.getSignInIntent();\r\n    }\r\n\r\n    protected boolean nick_check(Context context, EditText NickText){\r\n        final String nickname = NickText.getText().toString();\r\n        if (TextUtils.isEmpty(nickname)){\r\n            NickText.setBackgroundResource(R.drawable.red_stroke);\r\n            return false;\r\n        }\r\n        else if (nickname.length() < 3){\r\n            NickText.setBackgroundResource(R.drawable.red_stroke);\r\n            return false;\r\n        }\r\n        else if (nickname.contains(\" \")){\r\n            Toast.makeText(context, \"Il nickname non può contenere spazi\", Toast.LENGTH_SHORT).show();\r\n            NickText.setBackgroundResource(R.drawable.red_stroke);\r\n            return false;\r\n        }\r\n        else {\r\n            NickText.setBackgroundResource(R.drawable.green_stroke);\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    protected void check_nick_existance(final Context context, final EditText nick_editext) {\r\n        if (check_connection()) {\r\n            final String nickname = nick_editext.getText().toString();\r\n            NicknameRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    if (dataSnapshot.exists()) {\r\n                        if (dataSnapshot.hasChild(nickname)) {\r\n                            if (!TextUtils.isEmpty(nickname)) {\r\n                                Toast.makeText(context, \"Il nickname scelto è già presente\", Toast.LENGTH_SHORT).show();\r\n                                //Todo : caso in cui il nickname vada bene, modificare per conformarlo a quello che hai inserito tu @Martin\r\n                                //Basta che modifichi i file drawable\r\n                                nick_editext.setBackgroundResource(R.drawable.red_stroke);\r\n                            }\r\n                        } else {\r\n                            //Todo : caso in cui il nickname vada bene, modificare per conformarlo a quello che hai inserito tu @Martin\r\n                            //Basta che modifichi i file drawable \r\n                            nick_editext.setBackgroundResource(R.drawable.green_stroke);\r\n                        }\r\n                    }\r\n                    NicknameRef.removeEventListener(this);\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                }\r\n            });\r\n        } else {\r\n            Toast.makeText(context, \"Connessione persa\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    protected void prendi_data_e_ora_attuale() {\r\n        prendi_data_attuale();\r\n        prendi_ora_attuale();\r\n        data_e_ora = data_attuale + \" \" + ora_attuale;\r\n    }\r\n\r\n    protected void prendi_data_attuale() {\r\n        Calendar calldate = Calendar.getInstance(TimeZone.getDefault());\r\n        SimpleDateFormat currdate = new SimpleDateFormat(\"dd-MM-yyyy\", Locale.getDefault());\r\n        data_attuale = currdate.format(calldate.getTime());\r\n    }\r\n\r\n    protected void prendi_ora_attuale() {\r\n        Calendar calldate = Calendar.getInstance(TimeZone.getDefault());\r\n        SimpleDateFormat currtime = new SimpleDateFormat(\"HH:mm:ss\", Locale.getDefault());\r\n        ora_attuale = currtime.format(calldate.getTime());\r\n    }\r\n\r\n    protected void metto_immagine_in_database(final Context context, Uri local_uri, final String mode,final String nickname) {\r\n\r\n        registration_three_way_check = 0;\r\n        prendi_user_id_attuale();\r\n        prendi_data_e_ora_attuale();\r\n\r\n        public_progressdialog = new ProgressDialog(context);\r\n        public_progressdialog.show();\r\n        public_progressdialog.setCanceledOnTouchOutside(false);\r\n        public_progressdialog.setTitle(\"Verificando i tuoi dati...\");\r\n\r\n        immagine_utente = image_storage.child(current_user_id + \".jpg\");\r\n        immagine_utente.putFile(Objects.requireNonNull(local_uri)).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n            @Override\r\n            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                public_progressdialog.dismiss();\r\n                immagine_utente.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                    @Override\r\n                    public void onSuccess(Uri uri) {\r\n                        link_immmagine_dentro_db = uri.toString();\r\n                        if (mode.equals(\"registrazione\")){\r\n                            metto_altri_dati(context,nickname);\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Toast.makeText(context, \"sis \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                public_progressdialog.dismiss();\r\n            }\r\n        }).addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n            @Override\r\n            public void onProgress(@NonNull UploadTask.TaskSnapshot taskSnapshot) {\r\n                //displaying the upload progress\r\n                double progress = (100.0 * taskSnapshot.getBytesTransferred()) / taskSnapshot.getTotalByteCount();\r\n                public_progressdialog.setMessage(\"Caricamento \" + ((int) progress) + \"%...\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void metto_altri_dati(final Context context,final String nickname){\r\n\r\n        prendi_data_e_ora_attuale();\r\n        prendi_user_id_attuale();\r\n\r\n        HashMap<String, Object> userMap = new HashMap<>();\r\n\r\n        registration_three_way_check = registration_three_way_check + 1;\r\n        userMap.put(\"uid\", current_user_id);\r\n        userMap.put(\"data\", data_attuale);\r\n        userMap.put(\"ora\", ora_attuale);\r\n        userMap.put(\"nickname\", nickname);\r\n        userMap.put(\"email\",prefs.getString(\"email\",\"Mail non trovata\"));\r\n        userMap.put(\"user_image\",link_immmagine_dentro_db);\r\n\r\n\r\n        //Ora creo un figlio di Users, il figlio sarà l'id univoco\r\n        CurrentUserRef = UsersRef.child(current_user_id);\r\n        CurrentUserRef.updateChildren(userMap).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task task) {\r\n                if (task.isSuccessful()) {\r\n                    registration_three_way_check = registration_three_way_check + 1;\r\n                    editor.putBoolean(\"hasRegistration\", true);\r\n                    editor.apply();\r\n                } else {\r\n                    String message = Objects.requireNonNull(task.getException()).getMessage();\r\n                    Toast.makeText(context, \"Errore: \" + message, Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n        //Metto info in Nicknames\r\n        NicknameRef.child(nickname).setValue(0).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if (task.isSuccessful()) {\r\n                    registration_three_way_check = registration_three_way_check + 1;\r\n                    if (registration_three_way_check == 3){\r\n                        Toast.makeText(context, \"Account creato correttamente\", Toast.LENGTH_SHORT).show();\r\n                        finish();\r\n                    }\r\n                    else {\r\n                        String message = Objects.requireNonNull(task.getException()).getMessage();\r\n                        Toast.makeText(context, \"Errore: \" + message, Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    protected void update_current_speed_in_database(String uid_creatore,String uid_utente,String speed){\r\n\r\n        RoomsRef = FirebaseDatabase.getInstance().getReference().child(\"Rooms\");\r\n\r\n        RoomsRef.child(uid_creatore).child(\"partecipanti\").child(uid_utente).child(\"participant_speed\").setValue(speed).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    protected void pop_alarm_possible_sinister(Context context, final String uid_creatore, final String uid_utente){\r\n\r\n        //controllo se il dialog non sia già aperto\r\n        if (!dialog_is_already_opened){\r\n\r\n            dialog_is_already_opened = true;\r\n            dialog = new Dialog(context);\r\n            dialog.setCancelable(false);\r\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n            dialog.setContentView(R.layout.sinister_alarm_popup_layout);\r\n            Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n\r\n\r\n            if (!(context instanceof Activity && ((Activity) context).isFinishing())) {\r\n                dialog.show();\r\n            }\r\n\r\n            // set the custom dialog components - text, image and button\r\n            ImageButton confirm =  dialog.findViewById(R.id.imfinethanks);\r\n            TextView t = dialog.findViewById(R.id.alarm_popup_message);\r\n            final TextView time = dialog.findViewById(R.id.countdown_time);\r\n\r\n            t.setText(\"Hey!\\nTutto ok?\");\r\n            confirm.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    close_dialog();\r\n                }\r\n            });\r\n\r\n            //Inizio il countdown\r\n            alarm_countdown = new CountDownTimer(ALARM_COUNTDOWN_MAX_TIME,500) {\r\n                @Override\r\n                public void onTick(long millisUntilFinished) {\r\n                    String local_time = (millisUntilFinished / 1000) + \"\";\r\n                    time.setText(local_time);\r\n                }\r\n\r\n                @Override\r\n                public void onFinish() {\r\n                    close_dialog();\r\n                    send_alarm_to_room(uid_creatore,uid_utente);\r\n                }\r\n            };\r\n\r\n\r\n            alarm_countdown.start();\r\n        }\r\n    }\r\n\r\n    private void close_dialog(){\r\n        dialog_is_already_opened = false;\r\n        dialog.dismiss();\r\n        alarm_countdown.cancel();\r\n    }\r\n\r\n    private void send_alarm_to_room(String uid_creatore,String uid_utente){\r\n        RoomsRef = FirebaseDatabase.getInstance().getReference().child(\"Rooms\");\r\n\r\n        RoomsRef.child(uid_creatore).child(\"partecipanti\").child(uid_utente).child(\"participant_state\").setValue(\"1\").addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/sanchez/miguel/alfonso/simul/BaseActivity.java	(revision c7f72277303ec99feed7f1a3bd7b4b4196002ccf)
+++ app/src/main/java/sanchez/miguel/alfonso/simul/BaseActivity.java	(date 1607521393429)
@@ -104,7 +104,6 @@
 
     CountDownTimer alarm_countdown;
 
-
     boolean check_accelerometer_anomalies(double val){
         return val >= SOGLIA_ACCELEROMETRO;
     }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_04_12_2020_17_27__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_04_12_2020_17_27__Default_Changelist_.xml	(revision c7f72277303ec99feed7f1a3bd7b4b4196002ccf)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_04_12_2020_17_27__Default_Changelist_.xml	(revision c7f72277303ec99feed7f1a3bd7b4b4196002ccf)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_04_12_2020_17_27_[Default_Changelist]" date="1607099305828" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_04_12_2020_17_27_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 04/12/2020 17:27 [Default Changelist]" />
-  <binary>
-    <option name="BEFORE_PATH" value="app/release/app-release.apk" />
-    <option name="AFTER_PATH" value="app/release/app-release.apk" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_04_12_2020_17_27_[Default_Changelist]/app-release.apk" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_04_12_2020_17_27_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_04_12_2020_17_27_[Default_Changelist]/shelved.patch	(revision c7f72277303ec99feed7f1a3bd7b4b4196002ccf)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_04_12_2020_17_27_[Default_Changelist]/shelved.patch	(revision c7f72277303ec99feed7f1a3bd7b4b4196002ccf)
@@ -1,258 +0,0 @@
-Index: app/src/main/java/sanchez/miguel/alfonso/simul/ProfiloFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package sanchez.miguel.alfonso.simul;\r\n\r\nimport android.app.Activity;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.text.BreakIterator;\r\nimport java.util.Objects;\r\n\r\nimport jp.wasabeef.picasso.transformations.CropCircleTransformation;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.CurrentUserRef;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.NicknameRef;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.UsersRef;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.data_creazione_account;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.dialog;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.editor;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.email;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.link_immmagine_dentro_db;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.mGoogleSignInClient;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.nickname;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.prefs;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.web_client_for_google_sign_in;\r\n\r\n\r\npublic class ProfiloFragment extends BaseFragment {\r\n\r\n    private ImageView user_img;\r\n    private TextView email_textview;\r\n    private TextView date_textview;\r\n    private TextView nickname_textview;\r\n\r\n    public ProfiloFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        prefs = requireActivity().getSharedPreferences(\"MY_PREFS_NAME\", MODE_PRIVATE);\r\n        editor = prefs.edit();\r\n        editor.apply();\r\n        gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(requireActivity(), gso);\r\n        //Prendo auth corrente\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        prendi_user_id_attuale();\r\n\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_profilo, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n\r\n        user_img = view.findViewById(R.id.user_photo);\r\n        email_textview = view.findViewById(R.id.email);\r\n        date_textview = view.findViewById(R.id.creation_date);\r\n        nickname_textview = view.findViewById(R.id.nickname);\r\n\r\n        //listeners per i tasti\r\n        view.findViewById(R.id.tasto_logout).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                sloggami(getContext());\r\n            }\r\n        });\r\n\r\n        view.findViewById(R.id.tasto_delete_account).setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                delete_account(getContext());\r\n            }\r\n        });\r\n\r\n        //Update delle informazioni, posso chiamarlo perchè per essere arrivato qua i dati devono essere stati scaricati\r\n        update_ui_user_information();\r\n\r\n        super.onViewCreated(view, savedInstanceState);\r\n    }\r\n\r\n\r\n    protected void initilize_google_variables(){\r\n        gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(web_client_for_google_sign_in)\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(requireContext(), gso);\r\n        RC_SIGN_IN = 1;\r\n        signInIntent = mGoogleSignInClient.getSignInIntent();\r\n    }\r\n\r\n\r\n    protected void sloggami(Context context) {\r\n        initilize_google_variables();\r\n        if (mGoogleSignInClient != null){\r\n            mGoogleSignInClient.signOut();\r\n        }\r\n        if (mAuth != null){\r\n            mAuth.signOut();\r\n        }\r\n        FirebaseUser user = Objects.requireNonNull(mAuth).getCurrentUser();\r\n        if (user == null) {\r\n            //Aggiorno SharedPreferences\r\n            editor.putBoolean(\"hasLogin\", false);\r\n            editor.putBoolean(\"CONNECTION\", false);\r\n            editor.putBoolean(\"hasRegistration\", false);\r\n            editor.apply();\r\n\r\n            Toast.makeText(context, \"Sloggato correttamente\", Toast.LENGTH_SHORT).show();\r\n\r\n            requireActivity().finish();\r\n        } else {\r\n            Toast.makeText(context, \"Non sono riuscito a sloggarmi\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    protected void delete_account(final Context context){\r\n        dialog = new Dialog(context);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.popup_layout);\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        dialog.show();\r\n        // set the custom dialog components - text, image and button\r\n        ImageButton confirm =  dialog.findViewById(R.id.confirm_delete_calibration);\r\n        TextView t = dialog.findViewById(R.id.calibration_name_calibration_lol);\r\n\r\n        t.setText(\"Sicuro di voler eliminare il tuo account?\\ni tuoi dati online andranno persi\");\r\n        confirm.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                delete_account_from_database(context);\r\n            }\r\n        });\r\n\r\n        ImageButton no =  dialog.findViewById(R.id.no_delete_calibration);\r\n        no.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void delete_account_from_database(final Context context){\r\n        //riprendo lo user id, in caso di crash le variabili statiche si azzerano\r\n        prendi_user_id_attuale();\r\n        CurrentUserRef = UsersRef.child(current_user_id);\r\n\r\n        CurrentUserRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull final DataSnapshot snapshot) {\r\n                snapshot.getRef().removeValue().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        remove_nickaname_from_database(context);\r\n                    }\r\n                });\r\n\r\n                CurrentUserRef.removeEventListener(this);\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                CurrentUserRef.removeEventListener(this);\r\n            }\r\n        });\r\n\r\n        dialog.dismiss();\r\n    }\r\n\r\n    private void remove_nickaname_from_database(final Context context){\r\n        NicknameRef = FirebaseDatabase.getInstance().getReference().child(\"Nicknames\");\r\n        nickname = prefs.getString(\"nickname\",\"none\");\r\n        NicknameRef.child(nickname).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()){\r\n                    snapshot.getRef().removeValue().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Void> task) {\r\n                            sloggami(context);\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n                }\r\n                NicknameRef.child(nickname).removeEventListener(this);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                NicknameRef.child(nickname).removeEventListener(this);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void update_ui_user_information(){\r\n        link_immmagine_dentro_db = prefs.getString(\"immagine\",\"-\");\r\n        email = prefs.getString(\"email\",\"sas@ses.com\");\r\n        data_creazione_account = prefs.getString(\"data_creazione\",\"01/01/1900\");\r\n        Picasso.get()\r\n                .load(link_immmagine_dentro_db)\r\n                .transform(new CropCircleTransformation())\r\n                .placeholder(R.drawable.round_images_placeholder)\r\n                .error(R.drawable.unknown_user)\r\n                .into(user_img);\r\n        user_img.setBackground(getResources().getDrawable(R.drawable.round_images_background));\r\n\r\n        email_textview.setText(email);\r\n        date_textview.setText(\"Creato il\\n\" + data_creazione_account);\r\n        nickname_textview.setText(nickname);\r\n    }\r\n\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/sanchez/miguel/alfonso/simul/ProfiloFragment.java	(revision 06770823a420b903082ced6fffa87f211f9e76c6)
-+++ app/src/main/java/sanchez/miguel/alfonso/simul/ProfiloFragment.java	(date 1606375723651)
-@@ -1,6 +1,5 @@
- package sanchez.miguel.alfonso.simul;
- 
--import android.app.Activity;
- import android.app.Dialog;
- import android.content.Context;
- import android.graphics.Color;
-@@ -14,10 +13,8 @@
- import android.widget.ImageView;
- import android.widget.TextView;
- import android.widget.Toast;
--
- import androidx.annotation.NonNull;
- import androidx.annotation.Nullable;
--
- import com.google.android.gms.auth.api.signin.GoogleSignIn;
- import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
- import com.google.android.gms.tasks.OnCompleteListener;
-@@ -29,12 +26,8 @@
- import com.google.firebase.database.FirebaseDatabase;
- import com.google.firebase.database.ValueEventListener;
- import com.squareup.picasso.Picasso;
--
--import java.text.BreakIterator;
- import java.util.Objects;
--
- import jp.wasabeef.picasso.transformations.CropCircleTransformation;
--
- import static android.content.Context.MODE_PRIVATE;
- import static sanchez.miguel.alfonso.simul.BaseActivity.CurrentUserRef;
- import static sanchez.miguel.alfonso.simul.BaseActivity.NicknameRef;
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n\r\n    defaultConfig {\r\n        applicationId \"sanchez.miguel.alfonso.simul\"\r\n        minSdkVersion 24\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    //signing per release key SHA\r\n\r\n    signingConfigs {\r\n        release {\r\n            //FISH\r\n            //storeFile file(\"C:\\\\Users\\\\alber\\\\Desktop\\\\Simul.jks\")\r\n            //Todo : controllare sempre di sostituire questo, scrivete il vostro qui sopra cosi ogni volta non dobbiamo cercare il percorso nella cartella\r\n            storeFile file(\"C:\\\\Users\\\\Martin\\\\Desktop\\\\RobaIngSw\\\\Simul.jks\")\r\n            storePassword \"12345678\"\r\n            keyAlias \"key1\"\r\n            keyPassword \"12345678\"\r\n        }\r\n    }\r\n\r\n    //builtype per la release\r\n    buildTypes {\r\n        release {\r\n            signingConfig signingConfigs.release\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n\r\n        debug {\r\n            applicationIdSuffix \".debug\"\r\n            debuggable true\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    implementation 'com.google.firebase:firebase-database:19.5.1'\r\n    implementation 'com.firebaseui:firebase-ui-database:6.3.0'\r\n    implementation 'com.google.android.gms:play-services-cast-framework:19.0.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n\r\n    //immagine presa da storage result\r\n    api 'com.theartofdev.edmodo:android-image-cropper:2.8.0'\r\n\r\n    //immagini rotonde, download o load con picasso\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'jp.wasabeef:picasso-transformations:2.2.1'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    implementation \"com.google.android.material:material:1.2.1\"\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n\r\n    testImplementation 'junit:junit:4.13'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    //frontend Martin\r\n    def nav_version = \"2.3.1\"\r\n    implementation \"androidx.navigation:navigation-fragment:$nav_version\"\r\n    implementation \"androidx.navigation:navigation-ui:$nav_version\"\r\n    implementation 'com.google.android.material:material:1.3.0-alpha03'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n\r\n    implementation \"androidx.recyclerview:recyclerview:1.1.0\"\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision 06770823a420b903082ced6fffa87f211f9e76c6)
-+++ app/build.gradle	(date 1606376093343)
-@@ -18,9 +18,9 @@
-     signingConfigs {
-         release {
-             //FISH
--            //storeFile file("C:\\Users\\alber\\Desktop\\Simul.jks")
-+            storeFile file("C:\\Users\\alber\\Desktop\\Simul.jks")
-             //Todo : controllare sempre di sostituire questo, scrivete il vostro qui sopra cosi ogni volta non dobbiamo cercare il percorso nella cartella
--            storeFile file("C:\\Users\\Martin\\Desktop\\RobaIngSw\\Simul.jks")
-+            //storeFile file("C:\\Users\\Martin\\Desktop\\RobaIngSw\\Simul.jks")
-             storePassword "12345678"
-             keyAlias "key1"
-             keyPassword "12345678"
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_25_11_2020_12_31__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_25_11_2020_12_31__Default_Changelist_.xml	(revision 06770823a420b903082ced6fffa87f211f9e76c6)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_25_11_2020_12_31__Default_Changelist_.xml	(revision 06770823a420b903082ced6fffa87f211f9e76c6)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_25_11_2020_12_31_[Default_Changelist]" date="1606303875208" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25_11_2020_12_31_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 25/11/2020 12:31 [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_25_11_2020_12_31_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_25_11_2020_12_31_[Default_Changelist]/shelved.patch	(revision 06770823a420b903082ced6fffa87f211f9e76c6)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_25_11_2020_12_31_[Default_Changelist]/shelved.patch	(revision 06770823a420b903082ced6fffa87f211f9e76c6)
-@@ -1,78 +0,0 @@
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_11_2020_18_35__Default_Changelist_.xml
--===================================================================
----- .idea/shelf/Uncommitted_changes_before_Update_at_17_11_2020_18_35__Default_Changelist_.xml	(revision c3b74a8ddbcab71c64e5aec0c068a7e5f36d43fa)
--+++ .idea/shelf/Uncommitted_changes_before_Update_at_17_11_2020_18_35__Default_Changelist_.xml	(revision c3b74a8ddbcab71c64e5aec0c068a7e5f36d43fa)
--@@ -1,4 +0,0 @@
---<changelist name="Uncommitted_changes_before_Update_at_17_11_2020_18_35_[Default_Changelist]" date="1605634512589" recycled="true" deleted="true">
---  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_11_2020_18_35_[Default_Changelist]/shelved.patch" />
---  <option name="DESCRIPTION" value="Uncommitted changes before Update at 17/11/2020 18:35 [Default Changelist]" />
---</changelist>
--\ No newline at end of file
--Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_11_2020_18_35_[Default_Changelist]/shelved.patch
--===================================================================
----- .idea/shelf/Uncommitted_changes_before_Update_at_17_11_2020_18_35_[Default_Changelist]/shelved.patch	(revision c3b74a8ddbcab71c64e5aec0c068a7e5f36d43fa)
--+++ .idea/shelf/Uncommitted_changes_before_Update_at_17_11_2020_18_35_[Default_Changelist]/shelved.patch	(revision c3b74a8ddbcab71c64e5aec0c068a7e5f36d43fa)
--@@ -1,63 +0,0 @@
---Index: app/src/main/java/sanchez/miguel/alfonso/simul/Profilo.java
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>package sanchez.miguel.alfonso.simul;\r\n\r\nimport android.app.Activity;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.Objects;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.CurrentUserRef;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.NicknameRef;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.UsersRef;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.dialog;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.editor;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.mGoogleSignInClient;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.nickname;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.prefs;\r\nimport static sanchez.miguel.alfonso.simul.BaseActivity.web_client_for_google_sign_in;\r\n\r\n\r\npublic class Profilo extends BaseFragment {\r\n\r\n    public Profilo() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        prefs = requireActivity().getSharedPreferences(\"MY_PREFS_NAME\", MODE_PRIVATE);\r\n        editor = prefs.edit();\r\n        editor.apply();\r\n        gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(requireActivity(), gso);\r\n        //Prendo auth corrente\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        prendi_user_id_attuale();\r\n\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_profilo, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n\r\n            //listeners per i tasti\r\n            view.findViewById(R.id.tasto_logout).setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    sloggami(getContext());\r\n                }\r\n            });\r\n\r\n            view.findViewById(R.id.tasto_delete_account).setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    delete_account(getContext());\r\n                }\r\n            });\r\n\r\n        super.onViewCreated(view, savedInstanceState);\r\n    }\r\n\r\n\r\n    protected void initilize_google_variables(){\r\n        gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(web_client_for_google_sign_in)\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(requireContext(), gso);\r\n        RC_SIGN_IN = 1;\r\n        signInIntent = mGoogleSignInClient.getSignInIntent();\r\n    }\r\n\r\n\r\n    protected void sloggami(Context context) {\r\n        initilize_google_variables();\r\n        if (mGoogleSignInClient != null){\r\n            mGoogleSignInClient.signOut();\r\n        }\r\n        if (mAuth != null){\r\n            mAuth.signOut();\r\n        }\r\n        FirebaseUser user = Objects.requireNonNull(mAuth).getCurrentUser();\r\n        if (user == null) {\r\n            //Aggiorno SharedPreferences\r\n            editor.putBoolean(\"hasLogin\", false);\r\n            editor.putBoolean(\"CONNECTION\", false);\r\n            editor.putBoolean(\"hasRegistration\", false);\r\n            editor.apply();\r\n\r\n            Toast.makeText(context, \"Sloggato correttamente\", Toast.LENGTH_SHORT).show();\r\n\r\n            requireActivity().finish();\r\n        } else {\r\n            Toast.makeText(context, \"Non sono riuscito a sloggarmi\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    protected void delete_account(final Context context){\r\n        dialog = new Dialog(context);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.popup_layout);\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        dialog.show();\r\n        // set the custom dialog components - text, image and button\r\n        ImageButton confirm =  dialog.findViewById(R.id.confirm_delete_calibration);\r\n        TextView t = dialog.findViewById(R.id.calibration_name_calibration_lol);\r\n\r\n        t.setText(\"Sicuro di voler eliminare il tuo account?\\ni tuoi dati online andranno persi\");\r\n        confirm.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                delete_account_from_database(context);\r\n            }\r\n        });\r\n\r\n        ImageButton no =  dialog.findViewById(R.id.no_delete_calibration);\r\n        no.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void delete_account_from_database(final Context context){\r\n        //riprendo lo user id, in caso di crash le variabili statiche si azzerano\r\n        prendi_user_id_attuale();\r\n        CurrentUserRef = UsersRef.child(current_user_id);\r\n\r\n        CurrentUserRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull final DataSnapshot snapshot) {\r\n                snapshot.getRef().removeValue().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        remove_nickaname_from_database(context);\r\n                    }\r\n                });\r\n\r\n                CurrentUserRef.removeEventListener(this);\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                CurrentUserRef.removeEventListener(this);\r\n            }\r\n        });\r\n\r\n        dialog.dismiss();\r\n    }\r\n\r\n    private void remove_nickaname_from_database(final Context context){\r\n        NicknameRef.child(nickname).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()){\r\n                    snapshot.getRef().removeValue().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Void> task) {\r\n                            sloggami(context);\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n                }\r\n                NicknameRef.child(nickname).removeEventListener(this);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                NicknameRef.child(nickname).removeEventListener(this);\r\n            }\r\n        });\r\n    }\r\n\r\n}
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
------ app/src/main/java/sanchez/miguel/alfonso/simul/Profilo.java	(revision 0f21efe87053f88be698d07c2647721bee36e69f)
---+++ app/src/main/java/sanchez/miguel/alfonso/simul/Profilo.java	(date 1605634341392)
---@@ -1,6 +1,5 @@
--- package sanchez.miguel.alfonso.simul;
--- 
----import android.app.Activity;
--- import android.app.Dialog;
--- import android.content.Context;
--- import android.graphics.Color;
---@@ -13,10 +12,8 @@
--- import android.widget.ImageButton;
--- import android.widget.TextView;
--- import android.widget.Toast;
----
--- import androidx.annotation.NonNull;
--- import androidx.annotation.Nullable;
----
--- import com.google.android.gms.auth.api.signin.GoogleSignIn;
--- import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
--- import com.google.android.gms.tasks.OnCompleteListener;
---@@ -26,9 +23,7 @@
--- import com.google.firebase.database.DataSnapshot;
--- import com.google.firebase.database.DatabaseError;
--- import com.google.firebase.database.ValueEventListener;
----
--- import java.util.Objects;
----
--- import static android.content.Context.MODE_PRIVATE;
--- import static sanchez.miguel.alfonso.simul.BaseActivity.CurrentUserRef;
--- import static sanchez.miguel.alfonso.simul.BaseActivity.NicknameRef;
---@@ -184,6 +179,7 @@
---     }
--- 
---     private void remove_nickaname_from_database(final Context context){
---+        nickname = prefs.getString("nickname","none");
---         NicknameRef.child(nickname).addListenerForSingleValueEvent(new ValueEventListener() {
---             @Override
---             public void onDataChange(@NonNull DataSnapshot snapshot) {
---Index: app/build.gradle
---IDEA additional info:
---Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
---<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n\r\n    defaultConfig {\r\n        applicationId \"sanchez.miguel.alfonso.simul\"\r\n        minSdkVersion 24\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    //signing per release key SHA\r\n\r\n    signingConfigs {\r\n        release {\r\n            storeFile file(\"C:\\\\Users\\\\Martin\\\\Desktop\\\\RobaIngSw\\\\Simul.jks\")\r\n            storePassword \"12345678\"\r\n            keyAlias \"key1\"\r\n            keyPassword \"12345678\"\r\n        }\r\n    }\r\n\r\n    //builtype per la release\r\n    buildTypes {\r\n        release {\r\n            signingConfig signingConfigs.release\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n\r\n        debug {\r\n            applicationIdSuffix \".debug\"\r\n            debuggable true\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'\r\n    implementation 'com.google.firebase:firebase-auth:19.4.0'\r\n    implementation 'com.google.firebase:firebase-database:19.5.1'\r\n    implementation 'com.google.android.gms:play-services-cast-framework:19.0.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-analytics:17.6.0'\r\n\r\n    //immagine presa da storage result\r\n    api 'com.theartofdev.edmodo:android-image-cropper:2.8.0'\r\n\r\n    //immagini rotonde, download o load con picasso\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'jp.wasabeef:picasso-transformations:2.2.1'\r\n\r\n    implementation \"com.google.android.material:material:1.2.1\"\r\n\r\n\r\n\r\n\r\n    testImplementation 'junit:junit:4.13'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    //frontend Martin\r\n    def nav_version = \"2.3.1\"\r\n    implementation \"androidx.navigation:navigation-fragment:$nav_version\"\r\n    implementation \"androidx.navigation:navigation-ui:$nav_version\"\r\n    implementation 'com.google.android.material:material:1.3.0-alpha03'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n\r\n}\r\n
---Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
---<+>UTF-8
---===================================================================
------ app/build.gradle	(revision 0f21efe87053f88be698d07c2647721bee36e69f)
---+++ app/build.gradle	(date 1605633025165)
---@@ -17,7 +17,7 @@
--- 
---     signingConfigs {
---         release {
----            storeFile file("C:\\Users\\Martin\\Desktop\\RobaIngSw\\Simul.jks")
---+            storeFile file("C:\\Users\\alber\\Desktop\\Simul.jks")
---             storePassword "12345678"
---             keyAlias "key1"
---             keyPassword "12345678"
-Index: app/release/output-metadata.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>{\r\n  \"version\": 1,\r\n  \"artifactType\": {\r\n    \"type\": \"APK\",\r\n    \"kind\": \"Directory\"\r\n  },\r\n  \"applicationId\": \"sanchez.miguel.alfonso.simul\",\r\n  \"variantName\": \"release\",\r\n  \"elements\": [\r\n    {\r\n      \"type\": \"SINGLE\",\r\n      \"filters\": [],\r\n      \"properties\": [],\r\n      \"versionCode\": 1,\r\n      \"versionName\": \"1.0\",\r\n      \"enabled\": true,\r\n      \"outputFile\": \"app-release.apk\"\r\n    }\r\n  ]\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/release/output-metadata.json	(revision 06770823a420b903082ced6fffa87f211f9e76c6)
-+++ app/release/output-metadata.json	(date 1606304449471)
-@@ -1,19 +1,17 @@
- {
--  "version": 1,
-+  "version": 2,
-   "artifactType": {
-     "type": "APK",
-     "kind": "Directory"
-   },
-   "applicationId": "sanchez.miguel.alfonso.simul",
--  "variantName": "release",
-+  "variantName": "processReleaseResources",
-   "elements": [
-     {
-       "type": "SINGLE",
-       "filters": [],
--      "properties": [],
-       "versionCode": 1,
-       "versionName": "1.0",
--      "enabled": true,
-       "outputFile": "app-release.apk"
-     }
-   ]
-Index: app/src/main/java/sanchez/miguel/alfonso/simul/CLocation.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/sanchez/miguel/alfonso/simul/CLocation.java	(date 1607092829951)
-+++ app/src/main/java/sanchez/miguel/alfonso/simul/CLocation.java	(date 1607092829951)
-@@ -0,0 +1,65 @@
-+package sanchez.miguel.alfonso.simul;
-+
-+import android.location.Location;
-+
-+public class CLocation extends Location {
-+
-+    private boolean bUseMetricUnits = false;
-+
-+    public CLocation(Location location) {
-+        this(location, true);
-+    }
-+
-+    public CLocation(Location location, boolean bUseMetricUnits) {
-+        super(location);
-+        this.bUseMetricUnits = bUseMetricUnits;
-+    }
-+
-+    public boolean getbUseMetricUnits(){
-+        return this.bUseMetricUnits;
-+    }
-+
-+    public void setbUseMetricUnits(boolean bUseMetricUnits){
-+        this.bUseMetricUnits = bUseMetricUnits;
-+    }
-+
-+    @Override
-+    public float distanceTo(Location dest) {
-+        float nDistance = super.distanceTo(dest);
-+        if(!this.getbUseMetricUnits()){
-+            // Convert meters to feet
-+            nDistance = nDistance * 3.28083989501312f;
-+        }
-+        return nDistance;
-+    }
-+
-+    @Override
-+    public double getAltitude() {
-+        double nAltitude = super.getAltitude();
-+        if(!this.getbUseMetricUnits()){
-+            // Convert meters to feet
-+            nAltitude = nAltitude * 3.28083989501312d;
-+        }
-+        return nAltitude;
-+    }
-+
-+    @Override
-+    public float getSpeed() {
-+        float nSpeed = super.getSpeed() * 3.6f;
-+        if(!this.getbUseMetricUnits()){
-+            // Convert meters/second to miles/hour
-+            nSpeed = super.getSpeed() * 2.23693629f;
-+        }
-+        return nSpeed;
-+    }
-+
-+    @Override
-+    public float getAccuracy() {
-+        float nAccuracy = super.getAccuracy();
-+        if(!this.getbUseMetricUnits()){
-+            // Convert meters to feet
-+            nAccuracy = nAccuracy * 3.28083989501312f;
-+        }
-+        return nAccuracy;
-+    }
-+}
